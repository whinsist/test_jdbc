<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.test</groupId>
  <artifactId>test_jdbc</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>test_jdbc Maven Webapp</name>
  <url>http://www.example.com</url>



  <dependencies>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.32</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.4</version>
    </dependency>




    <!--
    Apache中commons包的各种jar的功能说明
    commons-logging.jar   						记录日志，通常和  log4j.jar共同使用
    commons-beanutils.jar（1.1）                主要提供Bean的用法
    commons-codec-1.3.jar（1.3）               主要包括核心的算法（Md5等）
    commons-collections-3.2.1.jar（3.2.1）  各种集合类和集合工具类的封装
    commons-dbcp-1.2.2.jar（1.2.2）            配置数据库用到的工具，如datasource
    commons-dbutils-1.2.jar（1.2）              是操作数据库的组件，对传统操作数据库的类进行二次封装，可以把结果集转化成List
    commons-fileupload-1.2.1.jar（1.2.1）   文件上传时候的组件
    commons-httpclient-3.0.1.jar（3.0.1）    http相关操作，如HttpURLConnection的操作
    commons-io-1.4.jar（1.4）                       io包
    commons-lang-2.3.jar（2.3）                   基础工具包，封装一些常用的基础操作，例如StringUtils类
    commons-pool-1.3.jar（1.3）                   连接池相关的包，基本跟数据源等相关  数据库的操作一起-->
    <!--RandomUtils.nextInt-->
    <!--commons-lang3主要目的是提供更多的工具类，其实也就是方便我们的开发，具体API需要自己研究-->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.3.2</version>
    </dependency>
    <!--commons-io:io流的工具,封装了很多处理io流和文件的方法[工具类,尾端类,迭代器,文件过滤器等]-->
    <!--FileUtils.writeStringToFile-->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.6</version>
    </dependency>




    <!--slf4j-logback-->
    <!--<dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.25</version>
    </dependency>-->
    <!-- 会依赖上面的slf4j-->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.h2database/h2 -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.197</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-dbcp2 -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-dbcp2</artifactId>
      <version>2.7.0</version>
    </dependency>

    <dependency>
      <groupId>com.atomikos</groupId>
      <artifactId>transactions-jdbc</artifactId>
      <version>4.0.6</version>
    </dependency>
    <dependency>
      <groupId>javax.transaction</groupId>
      <artifactId>javax.transaction-api</artifactId>
      <version>1.2</version>
    </dependency>


    <dependency>
      <groupId>commons-dbutils</groupId>
      <artifactId>commons-dbutils</artifactId>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>1.1.12</version>
    </dependency>

    <!--fastjson-->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>1.2.62</version>
    </dependency>




  </dependencies>

  <build>
    <finalName>test_jdbc</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.3</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
